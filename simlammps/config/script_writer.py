from simphony.core.cuba import CUBA

from simlammps.config.pair_style import PairStyle


class ScriptWriter(object):
    """ Writer of a LAMMPS-commands script

    The ScriptWriter generates a series of LAMMPS commands
    (that make up a LAMMPS-input script).

    The command script generated by this class can be passed to
    a LAMMPS executable as a file or string. Alternately, this
    script can be passed to the library interface of LAMMPS or
    individual commands generated by this script can be passed
    "one by one" to the library interface of LAMMPS

    """

    @staticmethod
    def get_configuration(data_file, BC, CM, SP):
        """ Return configuration command-script

        Parameters
        ----------
        data_file: string
            name of data file to be read before run (input)
            and written to after run (output)
        BC : DataContainer
            container of attributes related to the boundary conditions
        CM : DataContainer
            container of attributes related to the computational method
        SP : DataContainer
            container of attributes related to the system parameters/conditions

        Returns
        -------
        command script - string
            lines of a LAMMPS command script

        """

        _check_configuration(CM)

        number_steps = CM[CUBA.NUMBER_OF_TIME_STEPS]
        time_step = CM[CUBA.TIME_STEP]

        pair_style = PairStyle(SP)
        pair_style_input = pair_style.get_global_config()
        pair_coeff_input = pair_style.get_pair_coeffs()

        # TODO
        boundary = "p p p"

        # TODO
        fixes = "fix      1 all nve\n"

        return CONFIGURATION.format(BOUNDARY=boundary,
                                    DATAFILE=data_file,
                                    FIXES=fixes,
                                    NUMBER_STEPS=number_steps,
                                    TIME_STEP=time_step,
                                    PAIR_STYLE=pair_style_input,
                                    PAIR_COEFF=pair_coeff_input)


def _check_configuration(CM):
    """ Check if everything is configured correctly

    """
    cm_requirements = [CUBA.NUMBER_OF_TIME_STEPS,
                       CUBA.TIME_STEP]

    missing = [str(req) for req in cm_requirements
               if req not in CM.keys()]

    msg = ""
    if missing:
        msg = "Problem with CM component. "
        msg += "Missing: " + ', '.join(missing)

    # TODO check SP, BC

    if msg:
        # TODO throw unique exception that
        # users can catch and then try to fix
        # their configuration
        raise Exception(msg)

CONFIGURATION = """
# Control file generated by SimPhoNy

dimension 3
boundary {BOUNDARY}

atom_style  atomic
neighbor    0.3 bin
neigh_modify    delay 5

{PAIR_STYLE}

# read from SimPhoNy-generated file
read_data {DATAFILE}

{PAIR_COEFF}

{FIXES}

# Run

timestep {TIME_STEP}

run {NUMBER_STEPS}

# write reults to simphony-generated file
write_data {DATAFILE}
"""
